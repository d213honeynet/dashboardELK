input {
        beats {
                port => 5044
                include_codec_tag => false
        }
}


filter {
       if [document_type] == "honeypot" {
                json {
                        skip_on_invalid_json => true
                        source => "message"
                        remove_field => "host"
			remove_field => "[payload][source]"
                      }
                mutate {
                        copy => { "[_id][$oid]" => "[@metadata][_id]"}
                        remove_field => "_id"
                        gsub => ["message", "\\r\\n", ","]
                        rename => { "[payload][peerIP]" => "peerIP"}
                        rename => { "[payload][hostPort]" => "local_port"}
                        rename => { "[payload][protocol]" => "protocol"}
                        rename => { "[payload][remote_host]" => "peerIP"}
                        rename => { "[payload][local_port]" => "local_port"}
                        rename => { "[payload][connection_protocol]" => "protocol"}
                        rename => { "[payload][source_ip]" => "peerIP"}
                        rename => { "[payload][saddr]" => "peerIP"}
			rename => { "[payload][dport]" => "local_port"}
			rename => { "[payload][sensor_port]" => "local_port"}
			rename => { "[payload][src_ip]" => "peerIP"}
			rename => { "[payload][dst_port]" => "local_port"}
			rename => { "[payload][data_type]" => "protocol"}                                                
                        }
                grok {
                       match => {
                          "message" => [
                             ".*credentials\":\[\[\"%{DATA:userfailed}\",\"%{DATA:passfailed}\"\]\]",
                             ".*loggedin\":\[\"%{DATA:usersuccess}\",\"%{DATA:passsuccess}\"\]",
                             ".*loggedin\":\[%{DATA:unpassuccess}\]",
                             ".*credentials\"\:\[\[%{DATA:unpassfailed}\]\]",
                             ".*User-Agent\:\ %{DATA:user_agent} \(",
                             ".*request_raw\"\:\"%{DATA:attack_method} "
                                       ]
                                  }
                     }
                geoip { source => "peerIP"
                        target => "geoip"
                      }
                
                translate{
                        source => "[local_port]"
                        target => "[protocol]"
                        dictionary_path => "/var/log/logstash/proto.csv"
                        fallback => "unknown"
                         }
#                json {
#                        source => "message"
#                        remove_field => "message"
#                     }
       }
}

output {
       if [document_type] == "honeypot" {
                elasticsearch {
                        hosts => ["http://localhost:9200"]
                        index => "logstash-honeypot-%{+YYYY.MM.dd}"
                        document_id => "%{[@metadata][_id]}"
                }
#	stdout { codec => rubydebug }
       }
}
